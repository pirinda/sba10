/*
 * DGuiYearPicker.java
 *
 * Created on 3 de abril de 2008, 08:26 PM
 */

package sba.lib.gui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import javax.swing.JDialog;
import sba.lib.DLibConsts;
import sba.lib.DLibTimeUtils;

/**
 *
 * @author Sergio A. Flores
 */
public class DGuiYearPicker extends JDialog implements DGuiOptionPicker, ActionListener {

    private int mnPickerType;
    private int mnPickerResult;
    private boolean mbFirstActivation;
    private DGuiClient miClient;
    private DGuiFields moFields;

    /** Creates new form DGuiYearPicker */
    public DGuiYearPicker(DGuiClient client) {
        super(client.getFrame(), true);
        miClient = client;
        mnPickerType = DGuiConsts.DATE_PICKER_YEAR;
        initComponents();
        initComponentsCustom();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpCommand = new javax.swing.JPanel();
        jbOk = new javax.swing.JButton();
        jbCancel = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPeriod = new javax.swing.JLabel();
        moCalYear = new sba.lib.gui.bean.DBeanFieldCalendarYear();

        setTitle("Año");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jpCommand.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jbOk.setText("Aceptar");
        jbOk.setToolTipText("[Ctrl + Enter]");
        jbOk.setPreferredSize(new java.awt.Dimension(75, 23));
        jpCommand.add(jbOk);

        jbCancel.setText("Cancelar");
        jbCancel.setToolTipText("[Escape]");
        jpCommand.add(jbCancel);

        getContentPane().add(jpCommand, java.awt.BorderLayout.SOUTH);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Período:"));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jPeriod.setText("Año deseado:");
        jPeriod.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel2.add(jPeriod);
        jPanel2.add(moCalYear);

        jPanel1.add(jPanel2, java.awt.BorderLayout.PAGE_START);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-320)/2, (screenSize.height-200)/2, 320, 200);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        if (mbFirstActivation) {
            mbFirstActivation = false;
            moCalYear.processFocus();
        }
    }//GEN-LAST:event_formWindowActivated

    private void initComponentsCustom() {
        moFields = new DGuiFields();
        moFields.addField(moCalYear);
        moFields.setFormButton(jbOk);

        jbOk.addActionListener(this);
        jbCancel.addActionListener(this);

        DGuiUtils.createActionMap(rootPane, this, "actionOk", "ok", KeyEvent.VK_ENTER, KeyEvent.CTRL_DOWN_MASK);
        DGuiUtils.createActionMap(rootPane, this, "actionCancel", "cancel", KeyEvent.VK_ESCAPE, 0);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel jPeriod;
    private javax.swing.JButton jbCancel;
    private javax.swing.JButton jbOk;
    private javax.swing.JPanel jpCommand;
    private sba.lib.gui.bean.DBeanFieldCalendarYear moCalYear;
    // End of variables declaration//GEN-END:variables

    /*
     * Overriden methods
     */

    @Override
    public void setPickerSettings(DGuiClient client, int pickerType, int pickerSubtype, DGuiOptionPickerSettings settings) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void resetPicker() {
        int[] period = DLibTimeUtils.digestYear(miClient.getSession().getWorkingDate());

        mnPickerResult = DLibConsts.UNDEFINED;
        mbFirstActivation = true;

        moCalYear.setValue(period[0]);
    }

    @Override
    public void setPickerVisible(final boolean visible) {
        setVisible(visible);
    }

    @Override
    public void setOption(final Object option) {
        moCalYear.setValue(((int[]) option)[0]);
    }

    @Override
    public int[] getOption() {
        return new int[] { moCalYear.getValue() };
    }

    @Override
    public DGuiValidation validatePicker() {
        return moFields.validateFields();
    }

    @Override
    public int getPickerType() {
        return mnPickerType;
    }

    @Override
    public int getPickerSubtype() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public int getPickerResult() {
        return mnPickerResult;
    }

    @Override
    public void actionOk() {
        if (DGuiUtils.computeValidation(miClient, validatePicker())) {
            mnPickerResult = DGuiConsts.FORM_RESULT_OK;
            setVisible(false);
        }
    }

    @Override
    public void actionCancel() {
        mnPickerResult = DGuiConsts.FORM_RESULT_CANCEL;
        setVisible(false);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() instanceof javax.swing.JButton) {
            javax.swing.JButton button = (javax.swing.JButton) e.getSource();

            if (button == jbOk) {
                actionOk();
            }
            else if (button == jbCancel) {
                actionCancel();
            }
        }
    }
}
